@font-face {
    font-family: "Authentic";
    src: url(https://cdn.glitch.com/12a4bf39-d166-4818-9e7b-7ae3202b4923%2FAUTHENTICSans-Condensed-130.woff2?v=1567698064940);
}

body {
    font-family: "Authentic";
    font-optical-sizing: auto;
    font-weight: 450;
    font-style: normal;

    margin: 0;
    padding: 0;
}

.navbar {
    background-color: rgba(255, 255, 255, 0)fff;
    color: #000000;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 30px;
    padding-top: 25px;
    position: fixed;
    top: 0;
    width: calc(100% - 60px);
    font-size: 20px;
    z-index: 999;
}

#index {
    width: 100vw;
    height: 100vh;
    overflow: hidden;
}

.navbar a {
    text-decoration: none;
    padding: 5px 10px;
    border-radius: 5px;
}

.navbar a:hover {
    opacity: .4;
}

.container3 {
    width: 500px;
    margin: 0px auto;
}

.box3 {
    background-color: #ffffff00;
    width: 350px;
    height: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    position: absolute;
    top: 65px;
    transform: translate(75px);
}

.text3 {
    color: rgba(255, 0, 111, 0.558);
    text-align: center;
    text-transform: uppercase;
    rotate: 0deg;
    position: relative;
    width: auto;
    top: 00px;
    font-size: 15px;
}

.animated3 {
    animation-duration: 2s;
    animation-fill-mode: both;
    animation-iteration-count: infinite;
}

.page {
    font-size: 20px;
    text-align: center;
}

.content {
    padding-top: 60px;
}

.grid {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
    height: 100vh;
}

.grid-container {
    width: 60vw;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid4 .grid-container {
    width: 220px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid6 .grid-container {
    width: 340px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid8 .grid-container {
    width: 460px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid9 .grid-container {
    width: 340px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid10 .grid-container {
    width: 580px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid11 .grid-container {
    width: 700px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid12 .grid-container {
    width: 460px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid15 .grid-container {
    width: 580px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid16 .grid-container {
    width: 460px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid17 .grid-container {
    width: 460px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid18 .grid-container {
    width: 700px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid19 .grid-container {
    width: 460px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid20 .grid-container {
    width: 699px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid22 .grid-container {
    width: 1300px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid24 .grid-container {
    display: grid;
    grid-template-columns: repeat(6, 100px);
    grid-template-rows: repeat(4, 100px);
    justify-content: center;
    align-items: center;
    gap: 20px;
}

.grid25 .grid-container,
.gridindex .grid-container {
    width: 580px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.grid-item {
    width: 100px;
    height: 100px;
    background-color: #ccc;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
}

.gridindex .grid-container a {
    color: rgb(0, 0, 0);
    text-decoration: none;
    position: relative;
}

.grid1 {
    position: sticky;
    top: 0;
    overflow-y: auto;
    height: calc(200vh);
}

.indextext {
    font-size: 20px;
    position: relative;
    top: 2px;
    color: #000000;
}

/* Colors */
.grid1 .grid-item,
.grid11 .grid-item,
.grid21 .grid-item {
    background-color: #5ABEF0;
}

.grid1,
.grid11,
.grid21 {
    background-color: #214031;
}

#one .navbar,
#eleven .navbar,
#twentyone .navbar {
    color: #5ABEF0;
}

#one .navbar a,
#eleven .navbar a,
#twentyone .navbar a {
    color: #5ABEF0;
}

.grid6 .grid-item,
.grid16 .grid-item {
    background-color: #214031;
}

.grid6,
.grid16 {
    background-color: #5ABEF0;
}

#six .navbar,
#sixteen .navbar {
    color: #214031;
}

#six .navbar a,
#sixteen .navbar a {
    color: #214031;
}

.grid2 .grid-item,
.grid12 .grid-item,
.grid22 .grid-item {
    background-color: #966f56;
}

.grid2,
.grid12,
.grid22 {
    background-color: #FFC9E6;
}

#two .navbar,
#twelve .navbar,
#twentytwo .navbar {
    color: #966f56;
}

#two .navbar a,
#twelve .navbar a,
#twentytwo .navbar a {
    color: #966f56;
}

.grid7 .grid-item,
.grid17 .grid-item {
    background-color: #FFC9E6;
}

.grid7,
.grid17 {
    background-color: #966f56;
}

#seven .navbar,
#seventeen .navbar {
    color: #FFC9E6;
}

#seven .navbar a,
#seventeen .navbar a {
    color: #FFC9E6;
}

.grid3 .grid-item,
.grid13 .grid-item,
.grid23 .grid-item {
    background-color: #D2232A;
}

.grid3,
.grid13,
.grid23 {
    background-color: lightgray;
}

#three .navbar,
#thirteen .navbar,
#twentythree .navbar {
    color: #D2232A;
}

#three .navbar a,
#thirteen .navbar a,
#twentythree .navbar a {
    color: #D2232A;
}

.grid8 .grid-item,
.grid18 .grid-item {
    background-color: lightgray;
}

.grid8,
.grid18 {
    background-color: #D2232A;
}

#eight .navbar,
#eighteen .navbar {
    color: lightgray;
}

#eight .navbar a,
#eighteen .navbar a {
    color: lightgray;
}

.grid4 .grid-item,
.grid14 .grid-item,
.grid24 .grid-item {
    background-color: #00A957;
}

.grid4,
.grid14,
.grid24 {
    background-color: white;
}

#four .navbar,
#fourteen .navbar,
#twentyfour .navbar {
    color: #00A957;
}

#four .navbar a,
#fourteen .navbar a,
#twentyfour .navbar a {
    color: #00A957;
}

.grid9 .grid-item,
.grid19 .grid-item {
    background-color: white;
}

.grid9,
.grid19 {
    background-color: #00A957;
}

#nine .navbar,
#nineteen .navbar {
    color: white;
}

#nine .navbar a,
#nineteen .navbar a {
    color: white;
}

.grid5 .grid-item,
.grid15 .grid-item,
.grid25 .grid-item {
    background-color: #e0d5c5;
}

.grid5,
.grid15,
.grid25 {
    background-color: #31408C;
}

#five .navbar,
#fifteen .navbar,
#twentyfive .navbar {
    color: #e0d5c5;
}

#five .navbar a,
#fifteen .navbar a,
#twentyfive .navbar a {
    color: #e0d5c5;
}

.grid10 .grid-item,
.grid20 .grid-item {
    background-color: #31408C;
}

.grid10,
.grid20 {
    background-color: #e0d5c5;
}

#ten .navbar,
#twenty .navbar {
    color: #31408C;
}

#ten .navbar a,
#twenty .navbar a {
    color: #31408C;
}

#index .navbar a,
#index .navbar a:visited,
#index .page {
    color: lightgrey;
}

#index .grid-item {
    background-color: lightgray;
}

#index {
    background-color: #000000;
}

/* Some code adapted from css-tricks.com and ChatGPT*/

/* Charette 2 */
.grid2 {
    padding: 0;
    margin: 0;
    min-height: 200vh;
    background-color: #FFC9E6;
    animation: body 1s linear;
}

@keyframes body {
    to {
        background-color: #000000;
    }
}

:root * {
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);
    animation-iteration-count: 1;
    animation-fill-mode: both;
}

.grid2 .grid-container {
    position: fixed;
}

/* Charette 3 */
.grid3 .grid-container {
    position: fixed;
    animation: rotate 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);

    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes rotate {
    to {
        transform: rotate(360deg);
    }
}

.grid3 {
    min-height: 300vh;
}

/* Charette 4 */
.grid4 .grid-container .upLeft {
    position: fixed;
    animation: moveUpLeft 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);
    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes moveUpLeft {
    to {
        transform: translate(-60px, -60px);
    }
}

.grid4 .grid-container .upRight {
    position: fixed;
    animation: moveUpRight 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);
    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes moveUpRight {
    to {
        transform: translate(60px, -60px);
    }
}

.grid4 .grid-container .downLeft {
    position: fixed;
    animation: moveDownLeft 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);
    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes moveDownLeft {
    to {
        transform: translate(-60px, 60px);
    }
}

.grid4 .grid-container .downRight {
    position: fixed;
    animation: moveDownRight 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);
    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes moveDownRight {
    to {
        transform: translate(60px, 60px);
    }
}

.grid4 {
    min-height: 200vh;
}

/* Charette 5 */
.grid5 .grid-container .up5 {
    position: fixed;
    animation: moveUp 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);
    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes moveUp {
    to {
        transform: translate(0px, 200px);
    }
}

.grid5 .grid-container .down5 {
    position: fixed;
    animation: moveDown 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);
    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes moveDown {
    to {
        transform: translate(0px, -200px);
    }
}

.grid5 {
    min-height: 200vh;
}

/* Charette 6 */
.grid6 .grid-container {
    position: fixed;
}

.grid6 .grid-item {
    animation: rotate6 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);

    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes rotate6 {
    to {
        transform: rotate(360deg);
    }
}

.grid6 {
    min-height: 500vh;
}

/* Charette 7 */
.grid7 .grid-container {
    position: fixed;
}

.grid7 .grid-item {
    animation: translate7 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);
    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes translate7 {
    to {
        transform: translate(-1300px, 0px);
    }
}

.grid7 {
    min-height: 200vh;
}

/* Charette 8 */
.grid8 .grid-container {
    position: fixed;
}

.grid8 .grid-item.fast {
    animation: translateFast 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);

    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes translateFast {
    to {
        transform: translate(-800px, -800px);
    }
}

.grid8 .grid-item.medium {
    animation: translateMedium 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);

    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes translateMedium {
    to {
        transform: translate(-600px, -600px);
    }
}

.grid8 .grid-item.slow {
    animation: translateSlow 1s linear infinite;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);

    animation-iteration-count: 1;
    animation-fill-mode: both;
}

@keyframes translateSlow {
    to {
        transform: translate(-400px, -400px);
    }
}

.grid8 {
    min-height: 200vh;
}

/* Charette 9 */
.grid9 .grid-item {
    font-size: 30px;
    color: #00A957;
}

.grid9 .grid-container {
    position: fixed;
}

.letter9 {
    position: relative;
    top: 4px;
}

.go1,
.go2,
.go3,
.go4,
.go5,
.go6,
.go7,
.go8,
.go9 {
    display: none;
}

.grid9 {
    min-height: 350vh;
}

/* Charette 10 */
.grid10 .grid-container {
    overflow: hidden;
}

.grid10 .grid-container {
    position: fixed;

}

.grid10 {
    min-height: 250vh;
}

/* Charette 11 */
.grid11 .grid-container {
    position: fixed;
}

.grid11 {
    min-height: 200vh;
}

/* Charette 12 */
.grid12 .grid-container {
    position: fixed;
}

.grid12 {
    min-height: 250vh;
}

/* Charette 13 */

.grid13 .grid-container {
    position: fixed;
}

.grid13 {
    min-height: 200vh;
}

/* Charette 14 */
.grid14 .grid-container {
    position: fixed;
}

.grid14 {
    min-height: 400vh;
}

/* Charette 15 */
.grid15 .grid-container {
    position: fixed;
}

.grid15 {
    min-height: 200vh;
}

/* Charette 16 */
.grid16 .grid-container {
    position: fixed;
}

.grid16 {
    min-height: 200vh;
}

/* Charette 17 */
.grid17 .grid-container {
    position: fixed;
}

.grid17 {
    min-height: 250vh;
}

/* Charette 18 */
.grid18 .grid-container {
    position: fixed;
}

.grid18 {
    min-height: 300vh;
}

/* Charette 19 */
.grid19 .grid-container {
    position: fixed;
}

.grid19 {
    min-height: 250vh;
}

/* Charette 20 */
.grid20 .grid-container {
    position: fixed;
}

.grid20 {
    min-height: 250vh;
}

/* Charette 21 */
.grid21 .grid-container {
    position: fixed;
}

.grid21 {
    min-height: 217vh;
}

/* Charette 22 */
.grid22 .grid-container {
    position: fixed;
}

.grid22 {
    min-height: 600vh;
}

/* Charette 23 */
.grid23 .grid-container {
    position: fixed;
}

.grid23 {
    min-height: 600vh;
}

/* Charette 24 */
.grid24 .grid-container {
    position: fixed;
}

.grid24 {
    min-height: 300vh;
}

/* Charette 25 */
.grid25 .grid-container {
    position: fixed;
}

.grid25 {
    min-height: 350vh;
}